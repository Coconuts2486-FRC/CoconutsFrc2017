//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Block : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Block(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Block obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Block() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          pixyPINVOKE.delete_Block(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ushort type {
    set {
      pixyPINVOKE.Block_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort signature {
    set {
      pixyPINVOKE.Block_signature_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_signature_get(swigCPtr);
      return ret;
    } 
  }

  public ushort x {
    set {
      pixyPINVOKE.Block_x_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_x_get(swigCPtr);
      return ret;
    } 
  }

  public ushort y {
    set {
      pixyPINVOKE.Block_y_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_y_get(swigCPtr);
      return ret;
    } 
  }

  public ushort width {
    set {
      pixyPINVOKE.Block_width_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_width_get(swigCPtr);
      return ret;
    } 
  }

  public ushort height {
    set {
      pixyPINVOKE.Block_height_set(swigCPtr, value);
    } 
    get {
      ushort ret = pixyPINVOKE.Block_height_get(swigCPtr);
      return ret;
    } 
  }

  public short angle {
    set {
      pixyPINVOKE.Block_angle_set(swigCPtr, value);
    } 
    get {
      short ret = pixyPINVOKE.Block_angle_get(swigCPtr);
      return ret;
    } 
  }

  public Block() : this(pixyPINVOKE.new_Block(), true) {
  }

}
